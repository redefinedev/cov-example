name: Test

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  test:
    runs-on: ubuntu-latest

    ########### SHARED-START ###########

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: poetry install

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov

      - name: Rename code coverage data file
        shell: bash
        run: |
          if [[ -f ".coverage" ]]; then
            mv .coverage .coverage.${{ hashFiles('.coverage') }}
          fi

      ########### SHARED-END ###########

      ########### MAIN-START ###########

      - name: Upload main coverage report
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-main
          retention-days: 1
          path: .coverage.*

      ########### MAIN-END ###########

      ########### PR-START ###########

      - name: Fetch coverage report from main
        if: github.event_name == 'pull_request'
        id: fetch-artifact
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              status: 'success',
              per_page: 1
            }).then(response => response.data.workflow_runs[0].id);

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id
            }).then(response => response.data.artifacts);

            if (artifacts.length === 0) {
              throw new Error("No artifacts found");
            }

            const artifact = artifacts.find(a => a.name === 'coverage-report-main');

            if (!artifact) {
              throw new Error("Artifact not found");
            }

            return {
              artifact_url: artifact.archive_download_url,
              run_id: artifact.workflow_run.url,
            };
          result-encoding: string

      - name: Download artifact
        if: github.event_name == 'pull_request'
        run: |
          curl -sL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" ${{ steps.fetch-artifact.outputs.artifact_url }} > coverage-report-main.zip
          unzip coverage-report-main.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge coverage reports
        if: github.event_name == 'pull_request'
        run: |
          source .venv/bin/activate
          coverage combine
          coverage report
          coverage xml
          diff-cover coverage.xml --html-report coverage.html

      - name: Upload PR coverage xml
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-pr-xml
          retention-days: 1
          path: coverage.xml

      - name: Upload PR coverage html
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-pr-html
          retention-days: 1
          path: coverage.html
